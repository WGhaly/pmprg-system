// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Master Data Models
model ProjectType {
  id          String @id @default(cuid())
  code        String @unique
  name        String
  description String?
  active      Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  tiers       Tier[]
  projects    Project[]
  
  @@map("project_types")
}

model Tier {
  id              String @id @default(cuid())
  code            String
  name            String
  description     String?
  sizeHint        String?
  projectTypeId   String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  projectType     ProjectType @relation(fields: [projectTypeId], references: [id])
  tierBlocks      TierBlock[]
  projects        Project[]
  
  @@unique([projectTypeId, code])
  @@map("tiers")
}

model Block {
  id                    String @id @default(cuid())
  code                  String @unique
  name                  String
  description           String?
  defaultDurationWeeks  Int
  defaultDependencies   String? // JSON as string
  defaultSkillsMix      String? // JSON as string
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  tierBlocks            TierBlock[]
  deliverables          Deliverable[]
  projectBlocks         ProjectBlock[]
  
  @@map("blocks")
}

model TierBlock {
  id                      String @id @default(cuid())
  tierId                  String
  blockId                 String
  overrideDurationWeeks   Int?
  overrideSkillsMix       String? // JSON as string
  sequenceIndex           Int
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  
  tier                    Tier @relation(fields: [tierId], references: [id])
  block                   Block @relation(fields: [blockId], references: [id])
  
  @@unique([tierId, blockId])
  @@map("tier_blocks")
}

model Deliverable {
  id                String @id @default(cuid())
  code              String @unique
  name              String
  description       String?
  qualityCriteria   String? // JSON as string
  acceptanceMetrics String? // JSON as string
  blockId           String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  block             Block @relation(fields: [blockId], references: [id])
  
  @@map("deliverables")
}

model Skill {
  id          String @id @default(cuid())
  code        String @unique
  name        String
  description String?
  category    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  resourceSkills ResourceSkill[]
  
  @@map("skills")
}

model Resource {
  id                    String @id @default(cuid())
  employeeCode          String @unique
  name                  String
  employmentType        String
  homeTeam              String
  capacityHoursPerWeek  Float
  monthlyRate           Float
  availabilityCalendar  String? // JSON as string
  active                Boolean @default(true)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  resourceSkills        ResourceSkill[]
  allocations           Allocation[]
  calendarExceptions    ResourceCalendarException[]
  
  @@map("resources")
}

model ResourceSkill {
  id         String @id @default(cuid())
  resourceId String
  skillId    String
  level      Int @default(1) // 1-5 proficiency level
  createdAt  DateTime @default(now())
  
  resource   Resource @relation(fields: [resourceId], references: [id])
  skill      Skill @relation(fields: [skillId], references: [id])
  
  @@unique([resourceId, skillId])
  @@map("resource_skills")
}

model ResourceCalendarException {
  id                    String @id @default(cuid())
  resourceId            String
  date                  DateTime
  capacityOverrideHours Float?
  reason                String?
  createdAt             DateTime @default(now())
  
  resource              Resource @relation(fields: [resourceId], references: [id])
  
  @@unique([resourceId, date])
  @@map("resource_calendar_exceptions")
}

// Project Management Models
model Project {
  id              String @id @default(cuid())
  code            String @unique
  name            String
  clientType      String?
  projectTypeId   String
  tierId          String
  priority        Int @default(1)
  targetStartDate DateTime
  mode            String // "strict_start" or "priority_fit"
  status          String @default("planning")
  budgetCapex     Float?
  budgetOpex      Float?
  notes           String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  projectType     ProjectType @relation(fields: [projectTypeId], references: [id])
  tier            Tier @relation(fields: [tierId], references: [id])
  projectBlocks   ProjectBlock[]
  
  @@map("projects")
}

model ProjectBlock {
  id                  String @id @default(cuid())
  projectId           String
  blockId             String
  plannedStart        DateTime
  plannedEnd          DateTime
  plannedDurationWeeks Int
  sequenceIndex       Int
  dependencies        String? // JSON as string
  requiredSkillsMix   String? // JSON as string
  inhouseVsExternal   String @default("inhouse")
  plannedCost         Float?
  status              String @default("not_started")
  actualStart         DateTime?
  actualEnd           DateTime?
  actualHours         Float?
  actualCost          Float?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  
  project             Project @relation(fields: [projectId], references: [id])
  block               Block @relation(fields: [blockId], references: [id])
  allocations         Allocation[]
  
  @@unique([projectId, blockId])
  @@map("project_blocks")
}

model Allocation {
  id              String @id @default(cuid())
  projectId       String
  projectBlockId  String
  resourceId      String
  weekStartDate   DateTime
  allocatedHours  Float
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  projectBlock    ProjectBlock @relation(fields: [projectBlockId], references: [id])
  resource        Resource @relation(fields: [resourceId], references: [id])
  
  @@unique([projectBlockId, resourceId, weekStartDate])
  @@map("allocations")
}